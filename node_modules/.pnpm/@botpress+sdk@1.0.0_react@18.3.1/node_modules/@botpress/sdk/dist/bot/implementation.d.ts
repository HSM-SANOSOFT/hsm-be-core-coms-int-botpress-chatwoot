import type { Server } from 'node:http';
import { BaseBot } from './generic';
import { MessageHandler, EventHandler, StateExpiredHandler } from './server';
export type BotImplementationProps<_TBot extends BaseBot = BaseBot> = {};
export declare class BotImplementation<TBot extends BaseBot = BaseBot> {
    readonly props: BotImplementationProps<TBot>;
    private _state;
    constructor(props: BotImplementationProps<TBot>);
    readonly message: (handler: MessageHandler<TBot>) => void;
    readonly event: (handler: EventHandler<TBot>) => void;
    readonly stateExpired: (handler: StateExpiredHandler<TBot>) => void;
    readonly handler: (req: import("../serve").Request) => Promise<void | import("../serve").Response>;
    readonly start: (port?: number) => Promise<Server>;
}
